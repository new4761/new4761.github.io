function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var eventMap = new WeakMap();
export default function resolveEventListener(eventType) {
  return function (host, target, value, lastValue) {
    if (lastValue) {
      target.removeEventListener(eventType, eventMap.get(lastValue), lastValue.options !== undefined ? lastValue.options : false);
    }

    if (value) {
      if (typeof value !== 'function') {
        throw Error("Event listener must be a function: ".concat(_typeof(value)));
      }

      eventMap.set(value, value.bind(null, host));
      target.addEventListener(eventType, eventMap.get(value), value.options !== undefined ? value.options : false);
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZW1wbGF0ZS9yZXNvbHZlcnMvZXZlbnQuanMiXSwibmFtZXMiOlsiZXZlbnRNYXAiLCJXZWFrTWFwIiwicmVzb2x2ZUV2ZW50TGlzdGVuZXIiLCJldmVudFR5cGUiLCJob3N0IiwidGFyZ2V0IiwidmFsdWUiLCJsYXN0VmFsdWUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0Iiwib3B0aW9ucyIsInVuZGVmaW5lZCIsIkVycm9yIiwic2V0IiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsUUFBUSxHQUFHLElBQUlDLE9BQUosRUFBakI7QUFFQSxlQUFlLFNBQVNDLG9CQUFULENBQThCQyxTQUE5QixFQUF5QztBQUN0RCxTQUFPLFVBQUNDLElBQUQsRUFBT0MsTUFBUCxFQUFlQyxLQUFmLEVBQXNCQyxTQUF0QixFQUFvQztBQUN6QyxRQUFJQSxTQUFKLEVBQWU7QUFDYkYsTUFBQUEsTUFBTSxDQUFDRyxtQkFBUCxDQUNFTCxTQURGLEVBRUVILFFBQVEsQ0FBQ1MsR0FBVCxDQUFhRixTQUFiLENBRkYsRUFHRUEsU0FBUyxDQUFDRyxPQUFWLEtBQXNCQyxTQUF0QixHQUFrQ0osU0FBUyxDQUFDRyxPQUE1QyxHQUFzRCxLQUh4RDtBQUtEOztBQUVELFFBQUlKLEtBQUosRUFBVztBQUNULFVBQUksT0FBT0EsS0FBUCxLQUFpQixVQUFyQixFQUFpQztBQUMvQixjQUFNTSxLQUFLLHNEQUE4Q04sS0FBOUMsR0FBWDtBQUNEOztBQUVETixNQUFBQSxRQUFRLENBQUNhLEdBQVQsQ0FBYVAsS0FBYixFQUFvQkEsS0FBSyxDQUFDUSxJQUFOLENBQVcsSUFBWCxFQUFpQlYsSUFBakIsQ0FBcEI7QUFFQUMsTUFBQUEsTUFBTSxDQUFDVSxnQkFBUCxDQUNFWixTQURGLEVBRUVILFFBQVEsQ0FBQ1MsR0FBVCxDQUFhSCxLQUFiLENBRkYsRUFHRUEsS0FBSyxDQUFDSSxPQUFOLEtBQWtCQyxTQUFsQixHQUE4QkwsS0FBSyxDQUFDSSxPQUFwQyxHQUE4QyxLQUhoRDtBQUtEO0FBQ0YsR0F0QkQ7QUF1QkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBldmVudE1hcCA9IG5ldyBXZWFrTWFwKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlc29sdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSkge1xuICByZXR1cm4gKGhvc3QsIHRhcmdldCwgdmFsdWUsIGxhc3RWYWx1ZSkgPT4ge1xuICAgIGlmIChsYXN0VmFsdWUpIHtcbiAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFxuICAgICAgICBldmVudFR5cGUsXG4gICAgICAgIGV2ZW50TWFwLmdldChsYXN0VmFsdWUpLFxuICAgICAgICBsYXN0VmFsdWUub3B0aW9ucyAhPT0gdW5kZWZpbmVkID8gbGFzdFZhbHVlLm9wdGlvbnMgOiBmYWxzZSxcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBFdmVudCBsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb246ICR7dHlwZW9mIHZhbHVlfWApO1xuICAgICAgfVxuXG4gICAgICBldmVudE1hcC5zZXQodmFsdWUsIHZhbHVlLmJpbmQobnVsbCwgaG9zdCkpO1xuXG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgZXZlbnRUeXBlLFxuICAgICAgICBldmVudE1hcC5nZXQodmFsdWUpLFxuICAgICAgICB2YWx1ZS5vcHRpb25zICE9PSB1bmRlZmluZWQgPyB2YWx1ZS5vcHRpb25zIDogZmFsc2UsXG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdfQ==
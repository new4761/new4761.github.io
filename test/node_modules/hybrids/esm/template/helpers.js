var setCache = new Map();
export function set(propertyName, value) {
  if (!propertyName) throw Error("Target property name missing: ".concat(propertyName));

  if (arguments.length === 2) {
    return function (host) {
      host[propertyName] = value;
    };
  }

  var fn = setCache.get(propertyName);

  if (!fn) {
    fn = function fn(host, _ref) {
      var target = _ref.target;
      host[propertyName] = target.value;
    };

    setCache.set(propertyName, fn);
  }

  return fn;
}
var promiseMap = new WeakMap();
export function resolve(promise, placeholder) {
  var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;
  return function (host, target) {
    var timeout;

    if (placeholder) {
      timeout = setTimeout(function () {
        timeout = undefined;
        requestAnimationFrame(function () {
          placeholder(host, target);
        });
      }, delay);
    }

    promiseMap.set(target, promise);
    promise.then(function (template) {
      if (timeout) clearTimeout(timeout);

      if (promiseMap.get(target) === promise) {
        template(host, target);
        promiseMap.set(target, null);
      }
    });
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wbGF0ZS9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbInNldENhY2hlIiwiTWFwIiwic2V0IiwicHJvcGVydHlOYW1lIiwidmFsdWUiLCJFcnJvciIsImFyZ3VtZW50cyIsImxlbmd0aCIsImhvc3QiLCJmbiIsImdldCIsInRhcmdldCIsInByb21pc2VNYXAiLCJXZWFrTWFwIiwicmVzb2x2ZSIsInByb21pc2UiLCJwbGFjZWhvbGRlciIsImRlbGF5IiwidGltZW91dCIsInNldFRpbWVvdXQiLCJ1bmRlZmluZWQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ0aGVuIiwidGVtcGxhdGUiLCJjbGVhclRpbWVvdXQiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFFBQVEsR0FBRyxJQUFJQyxHQUFKLEVBQWpCO0FBQ0EsT0FBTyxTQUFTQyxHQUFULENBQWFDLFlBQWIsRUFBMkJDLEtBQTNCLEVBQWtDO0FBQ3ZDLE1BQUksQ0FBQ0QsWUFBTCxFQUFtQixNQUFNRSxLQUFLLHlDQUFrQ0YsWUFBbEMsRUFBWDs7QUFFbkIsTUFBSUcsU0FBUyxDQUFDQyxNQUFWLEtBQXFCLENBQXpCLEVBQTRCO0FBQzFCLFdBQU8sVUFBQ0MsSUFBRCxFQUFVO0FBQUVBLE1BQUFBLElBQUksQ0FBQ0wsWUFBRCxDQUFKLEdBQXFCQyxLQUFyQjtBQUE2QixLQUFoRDtBQUNEOztBQUVELE1BQUlLLEVBQUUsR0FBR1QsUUFBUSxDQUFDVSxHQUFULENBQWFQLFlBQWIsQ0FBVDs7QUFFQSxNQUFJLENBQUNNLEVBQUwsRUFBUztBQUNQQSxJQUFBQSxFQUFFLEdBQUcsWUFBQ0QsSUFBRCxRQUFzQjtBQUFBLFVBQWJHLE1BQWEsUUFBYkEsTUFBYTtBQUFFSCxNQUFBQSxJQUFJLENBQUNMLFlBQUQsQ0FBSixHQUFxQlEsTUFBTSxDQUFDUCxLQUE1QjtBQUFvQyxLQUFqRTs7QUFDQUosSUFBQUEsUUFBUSxDQUFDRSxHQUFULENBQWFDLFlBQWIsRUFBMkJNLEVBQTNCO0FBQ0Q7O0FBRUQsU0FBT0EsRUFBUDtBQUNEO0FBRUQsSUFBTUcsVUFBVSxHQUFHLElBQUlDLE9BQUosRUFBbkI7QUFDQSxPQUFPLFNBQVNDLE9BQVQsQ0FBaUJDLE9BQWpCLEVBQTBCQyxXQUExQixFQUFvRDtBQUFBLE1BQWJDLEtBQWEsdUVBQUwsR0FBSztBQUN6RCxTQUFPLFVBQUNULElBQUQsRUFBT0csTUFBUCxFQUFrQjtBQUN2QixRQUFJTyxPQUFKOztBQUVBLFFBQUlGLFdBQUosRUFBaUI7QUFDZkUsTUFBQUEsT0FBTyxHQUFHQyxVQUFVLENBQUMsWUFBTTtBQUN6QkQsUUFBQUEsT0FBTyxHQUFHRSxTQUFWO0FBRUFDLFFBQUFBLHFCQUFxQixDQUFDLFlBQU07QUFDMUJMLFVBQUFBLFdBQVcsQ0FBQ1IsSUFBRCxFQUFPRyxNQUFQLENBQVg7QUFDRCxTQUZvQixDQUFyQjtBQUdELE9BTm1CLEVBTWpCTSxLQU5pQixDQUFwQjtBQU9EOztBQUVETCxJQUFBQSxVQUFVLENBQUNWLEdBQVgsQ0FBZVMsTUFBZixFQUF1QkksT0FBdkI7QUFFQUEsSUFBQUEsT0FBTyxDQUFDTyxJQUFSLENBQWEsVUFBQ0MsUUFBRCxFQUFjO0FBQ3pCLFVBQUlMLE9BQUosRUFBYU0sWUFBWSxDQUFDTixPQUFELENBQVo7O0FBRWIsVUFBSU4sVUFBVSxDQUFDRixHQUFYLENBQWVDLE1BQWYsTUFBMkJJLE9BQS9CLEVBQXdDO0FBQ3RDUSxRQUFBQSxRQUFRLENBQUNmLElBQUQsRUFBT0csTUFBUCxDQUFSO0FBQ0FDLFFBQUFBLFVBQVUsQ0FBQ1YsR0FBWCxDQUFlUyxNQUFmLEVBQXVCLElBQXZCO0FBQ0Q7QUFDRixLQVBEO0FBUUQsR0F2QkQ7QUF3QkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzZXRDYWNoZSA9IG5ldyBNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiBzZXQocHJvcGVydHlOYW1lLCB2YWx1ZSkge1xuICBpZiAoIXByb3BlcnR5TmFtZSkgdGhyb3cgRXJyb3IoYFRhcmdldCBwcm9wZXJ0eSBuYW1lIG1pc3Npbmc6ICR7cHJvcGVydHlOYW1lfWApO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgcmV0dXJuIChob3N0KSA9PiB7IGhvc3RbcHJvcGVydHlOYW1lXSA9IHZhbHVlOyB9O1xuICB9XG5cbiAgbGV0IGZuID0gc2V0Q2FjaGUuZ2V0KHByb3BlcnR5TmFtZSk7XG5cbiAgaWYgKCFmbikge1xuICAgIGZuID0gKGhvc3QsIHsgdGFyZ2V0IH0pID0+IHsgaG9zdFtwcm9wZXJ0eU5hbWVdID0gdGFyZ2V0LnZhbHVlOyB9O1xuICAgIHNldENhY2hlLnNldChwcm9wZXJ0eU5hbWUsIGZuKTtcbiAgfVxuXG4gIHJldHVybiBmbjtcbn1cblxuY29uc3QgcHJvbWlzZU1hcCA9IG5ldyBXZWFrTWFwKCk7XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZShwcm9taXNlLCBwbGFjZWhvbGRlciwgZGVsYXkgPSAyMDApIHtcbiAgcmV0dXJuIChob3N0LCB0YXJnZXQpID0+IHtcbiAgICBsZXQgdGltZW91dDtcblxuICAgIGlmIChwbGFjZWhvbGRlcikge1xuICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aW1lb3V0ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgcGxhY2Vob2xkZXIoaG9zdCwgdGFyZ2V0KTtcbiAgICAgICAgfSk7XG4gICAgICB9LCBkZWxheSk7XG4gICAgfVxuXG4gICAgcHJvbWlzZU1hcC5zZXQodGFyZ2V0LCBwcm9taXNlKTtcblxuICAgIHByb21pc2UudGhlbigodGVtcGxhdGUpID0+IHtcbiAgICAgIGlmICh0aW1lb3V0KSBjbGVhclRpbWVvdXQodGltZW91dCk7XG5cbiAgICAgIGlmIChwcm9taXNlTWFwLmdldCh0YXJnZXQpID09PSBwcm9taXNlKSB7XG4gICAgICAgIHRlbXBsYXRlKGhvc3QsIHRhcmdldCk7XG4gICAgICAgIHByb21pc2VNYXAuc2V0KHRhcmdldCwgbnVsbCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59XG4iXX0=
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

import { camelToDash } from './utils';

var defaultTransform = function defaultTransform(v) {
  return v;
};

var objectTransform = function objectTransform(value) {
  if (_typeof(value) !== 'object') {
    throw TypeError("Assigned value must be an object: ".concat(typeof v === "undefined" ? "undefined" : _typeof(v)));
  }

  return value && Object.freeze(value);
};

export default function property(value, connect) {
  var type = _typeof(value);

  var transform = defaultTransform;

  switch (type) {
    case 'string':
      transform = String;
      break;

    case 'number':
      transform = Number;
      break;

    case 'boolean':
      transform = Boolean;
      break;

    case 'function':
      transform = value;
      value = transform();
      break;

    case 'object':
      if (value) Object.freeze(value);
      transform = objectTransform;
      break;

    default:
      break;
  }

  return {
    get: function get(host) {
      var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;
      return val;
    },
    set: function set(host, val, oldValue) {
      return transform(val, oldValue);
    },
    connect: type !== 'object' && type !== 'undefined' ? function (host, key, invalidate) {
      if (host[key] === value) {
        var attrName = camelToDash(key);

        if (host.hasAttribute(attrName)) {
          var attrValue = host.getAttribute(attrName);
          host[key] = attrValue !== '' ? attrValue : true;
        }
      }

      return connect && connect(host, key, invalidate);
    } : connect
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm9wZXJ0eS5qcyJdLCJuYW1lcyI6WyJjYW1lbFRvRGFzaCIsImRlZmF1bHRUcmFuc2Zvcm0iLCJ2Iiwib2JqZWN0VHJhbnNmb3JtIiwidmFsdWUiLCJUeXBlRXJyb3IiLCJPYmplY3QiLCJmcmVlemUiLCJwcm9wZXJ0eSIsImNvbm5lY3QiLCJ0eXBlIiwidHJhbnNmb3JtIiwiU3RyaW5nIiwiTnVtYmVyIiwiQm9vbGVhbiIsImdldCIsImhvc3QiLCJ2YWwiLCJzZXQiLCJvbGRWYWx1ZSIsImtleSIsImludmFsaWRhdGUiLCJhdHRyTmFtZSIsImhhc0F0dHJpYnV0ZSIsImF0dHJWYWx1ZSIsImdldEF0dHJpYnV0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxXQUFULFFBQTRCLFNBQTVCOztBQUVBLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQUMsQ0FBQztBQUFBLFNBQUlBLENBQUo7QUFBQSxDQUExQjs7QUFFQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLEtBQUQsRUFBVztBQUNqQyxNQUFJLFFBQU9BLEtBQVAsTUFBaUIsUUFBckIsRUFBK0I7QUFDN0IsVUFBTUMsU0FBUyxvREFBNkNILENBQTdDLHlDQUE2Q0EsQ0FBN0MsR0FBZjtBQUNEOztBQUNELFNBQU9FLEtBQUssSUFBSUUsTUFBTSxDQUFDQyxNQUFQLENBQWNILEtBQWQsQ0FBaEI7QUFDRCxDQUxEOztBQU9BLGVBQWUsU0FBU0ksUUFBVCxDQUFrQkosS0FBbEIsRUFBeUJLLE9BQXpCLEVBQWtDO0FBQy9DLE1BQU1DLElBQUksV0FBVU4sS0FBVixDQUFWOztBQUNBLE1BQUlPLFNBQVMsR0FBR1YsZ0JBQWhCOztBQUVBLFVBQVFTLElBQVI7QUFDRSxTQUFLLFFBQUw7QUFDRUMsTUFBQUEsU0FBUyxHQUFHQyxNQUFaO0FBQ0E7O0FBQ0YsU0FBSyxRQUFMO0FBQ0VELE1BQUFBLFNBQVMsR0FBR0UsTUFBWjtBQUNBOztBQUNGLFNBQUssU0FBTDtBQUNFRixNQUFBQSxTQUFTLEdBQUdHLE9BQVo7QUFDQTs7QUFDRixTQUFLLFVBQUw7QUFDRUgsTUFBQUEsU0FBUyxHQUFHUCxLQUFaO0FBQ0FBLE1BQUFBLEtBQUssR0FBR08sU0FBUyxFQUFqQjtBQUNBOztBQUNGLFNBQUssUUFBTDtBQUNFLFVBQUlQLEtBQUosRUFBV0UsTUFBTSxDQUFDQyxNQUFQLENBQWNILEtBQWQ7QUFDWE8sTUFBQUEsU0FBUyxHQUFHUixlQUFaO0FBQ0E7O0FBQ0Y7QUFBUztBQWxCWDs7QUFxQkEsU0FBTztBQUNMWSxJQUFBQSxHQUFHLEVBQUUsYUFBQ0MsSUFBRDtBQUFBLFVBQU9DLEdBQVAsdUVBQWFiLEtBQWI7QUFBQSxhQUF1QmEsR0FBdkI7QUFBQSxLQURBO0FBRUxDLElBQUFBLEdBQUcsRUFBRSxhQUFDRixJQUFELEVBQU9DLEdBQVAsRUFBWUUsUUFBWjtBQUFBLGFBQXlCUixTQUFTLENBQUNNLEdBQUQsRUFBTUUsUUFBTixDQUFsQztBQUFBLEtBRkE7QUFHTFYsSUFBQUEsT0FBTyxFQUFFQyxJQUFJLEtBQUssUUFBVCxJQUFxQkEsSUFBSSxLQUFLLFdBQTlCLEdBQ0wsVUFBQ00sSUFBRCxFQUFPSSxHQUFQLEVBQVlDLFVBQVosRUFBMkI7QUFDM0IsVUFBSUwsSUFBSSxDQUFDSSxHQUFELENBQUosS0FBY2hCLEtBQWxCLEVBQXlCO0FBQ3ZCLFlBQU1rQixRQUFRLEdBQUd0QixXQUFXLENBQUNvQixHQUFELENBQTVCOztBQUVBLFlBQUlKLElBQUksQ0FBQ08sWUFBTCxDQUFrQkQsUUFBbEIsQ0FBSixFQUFpQztBQUMvQixjQUFNRSxTQUFTLEdBQUdSLElBQUksQ0FBQ1MsWUFBTCxDQUFrQkgsUUFBbEIsQ0FBbEI7QUFDQU4sVUFBQUEsSUFBSSxDQUFDSSxHQUFELENBQUosR0FBWUksU0FBUyxLQUFLLEVBQWQsR0FBbUJBLFNBQW5CLEdBQStCLElBQTNDO0FBQ0Q7QUFDRjs7QUFFRCxhQUFPZixPQUFPLElBQUlBLE9BQU8sQ0FBQ08sSUFBRCxFQUFPSSxHQUFQLEVBQVlDLFVBQVosQ0FBekI7QUFDRCxLQVpNLEdBYUxaO0FBaEJDLEdBQVA7QUFrQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYW1lbFRvRGFzaCB9IGZyb20gJy4vdXRpbHMnO1xuXG5jb25zdCBkZWZhdWx0VHJhbnNmb3JtID0gdiA9PiB2O1xuXG5jb25zdCBvYmplY3RUcmFuc2Zvcm0gPSAodmFsdWUpID0+IHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoYEFzc2lnbmVkIHZhbHVlIG11c3QgYmUgYW4gb2JqZWN0OiAke3R5cGVvZiB2fWApO1xuICB9XG4gIHJldHVybiB2YWx1ZSAmJiBPYmplY3QuZnJlZXplKHZhbHVlKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb3BlcnR5KHZhbHVlLCBjb25uZWN0KSB7XG4gIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxldCB0cmFuc2Zvcm0gPSBkZWZhdWx0VHJhbnNmb3JtO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICB0cmFuc2Zvcm0gPSBTdHJpbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgdHJhbnNmb3JtID0gTnVtYmVyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICB0cmFuc2Zvcm0gPSBCb29sZWFuO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAgdHJhbnNmb3JtID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IHRyYW5zZm9ybSgpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIGlmICh2YWx1ZSkgT2JqZWN0LmZyZWV6ZSh2YWx1ZSk7XG4gICAgICB0cmFuc2Zvcm0gPSBvYmplY3RUcmFuc2Zvcm07XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OiBicmVhaztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0OiAoaG9zdCwgdmFsID0gdmFsdWUpID0+IHZhbCxcbiAgICBzZXQ6IChob3N0LCB2YWwsIG9sZFZhbHVlKSA9PiB0cmFuc2Zvcm0odmFsLCBvbGRWYWx1ZSksXG4gICAgY29ubmVjdDogdHlwZSAhPT0gJ29iamVjdCcgJiYgdHlwZSAhPT0gJ3VuZGVmaW5lZCdcbiAgICAgID8gKGhvc3QsIGtleSwgaW52YWxpZGF0ZSkgPT4ge1xuICAgICAgICBpZiAoaG9zdFtrZXldID09PSB2YWx1ZSkge1xuICAgICAgICAgIGNvbnN0IGF0dHJOYW1lID0gY2FtZWxUb0Rhc2goa2V5KTtcblxuICAgICAgICAgIGlmIChob3N0Lmhhc0F0dHJpYnV0ZShhdHRyTmFtZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGF0dHJWYWx1ZSA9IGhvc3QuZ2V0QXR0cmlidXRlKGF0dHJOYW1lKTtcbiAgICAgICAgICAgIGhvc3Rba2V5XSA9IGF0dHJWYWx1ZSAhPT0gJycgPyBhdHRyVmFsdWUgOiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb25uZWN0ICYmIGNvbm5lY3QoaG9zdCwga2V5LCBpbnZhbGlkYXRlKTtcbiAgICAgIH1cbiAgICAgIDogY29ubmVjdCxcbiAgfTtcbn1cbiJdfQ==
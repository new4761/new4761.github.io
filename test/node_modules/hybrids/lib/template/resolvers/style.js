"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveStyle;

var _utils = require("../../utils");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var styleMap = new WeakMap();

function resolveStyle(host, target, value) {
  if (value === null || _typeof(value) !== 'object') {
    throw TypeError("Style value must be an object in ".concat((0, _utils.stringifyElement)(target), ":"), value);
  }

  var previousMap = styleMap.get(target) || new Map();
  var nextMap = Object.keys(value).reduce(function (map, key) {
    var dashKey = (0, _utils.camelToDash)(key);
    var styleValue = value[key];

    if (!styleValue && styleValue !== 0) {
      target.style.removeProperty(dashKey);
    } else {
      target.style.setProperty(dashKey, styleValue);
    }

    map.set(dashKey, styleValue);
    previousMap.delete(dashKey);
    return map;
  }, new Map());
  previousMap.forEach(function (styleValue, key) {
    target.style[key] = '';
  });
  styleMap.set(target, nextMap);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZW1wbGF0ZS9yZXNvbHZlcnMvc3R5bGUuanMiXSwibmFtZXMiOlsic3R5bGVNYXAiLCJXZWFrTWFwIiwicmVzb2x2ZVN0eWxlIiwiaG9zdCIsInRhcmdldCIsInZhbHVlIiwiVHlwZUVycm9yIiwicHJldmlvdXNNYXAiLCJnZXQiLCJNYXAiLCJuZXh0TWFwIiwiT2JqZWN0Iiwia2V5cyIsInJlZHVjZSIsIm1hcCIsImtleSIsImRhc2hLZXkiLCJzdHlsZVZhbHVlIiwic3R5bGUiLCJyZW1vdmVQcm9wZXJ0eSIsInNldFByb3BlcnR5Iiwic2V0IiwiZGVsZXRlIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLElBQUlDLE9BQUosRUFBakI7O0FBRWUsU0FBU0MsWUFBVCxDQUFzQkMsSUFBdEIsRUFBNEJDLE1BQTVCLEVBQW9DQyxLQUFwQyxFQUEyQztBQUN4RCxNQUFJQSxLQUFLLEtBQUssSUFBVixJQUFrQixRQUFPQSxLQUFQLE1BQWlCLFFBQXZDLEVBQWlEO0FBQy9DLFVBQU1DLFNBQVMsNENBQXFDLDZCQUFpQkYsTUFBakIsQ0FBckMsUUFBa0VDLEtBQWxFLENBQWY7QUFDRDs7QUFFRCxNQUFNRSxXQUFXLEdBQUdQLFFBQVEsQ0FBQ1EsR0FBVCxDQUFhSixNQUFiLEtBQXdCLElBQUlLLEdBQUosRUFBNUM7QUFFQSxNQUFNQyxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUCxLQUFaLEVBQW1CUSxNQUFuQixDQUEwQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN0RCxRQUFNQyxPQUFPLEdBQUcsd0JBQVlELEdBQVosQ0FBaEI7QUFDQSxRQUFNRSxVQUFVLEdBQUdaLEtBQUssQ0FBQ1UsR0FBRCxDQUF4Qjs7QUFFQSxRQUFJLENBQUNFLFVBQUQsSUFBZUEsVUFBVSxLQUFLLENBQWxDLEVBQXFDO0FBQ25DYixNQUFBQSxNQUFNLENBQUNjLEtBQVAsQ0FBYUMsY0FBYixDQUE0QkgsT0FBNUI7QUFDRCxLQUZELE1BRU87QUFDTFosTUFBQUEsTUFBTSxDQUFDYyxLQUFQLENBQWFFLFdBQWIsQ0FBeUJKLE9BQXpCLEVBQWtDQyxVQUFsQztBQUNEOztBQUVESCxJQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUUwsT0FBUixFQUFpQkMsVUFBakI7QUFDQVYsSUFBQUEsV0FBVyxDQUFDZSxNQUFaLENBQW1CTixPQUFuQjtBQUVBLFdBQU9GLEdBQVA7QUFDRCxHQWRlLEVBY2IsSUFBSUwsR0FBSixFQWRhLENBQWhCO0FBZ0JBRixFQUFBQSxXQUFXLENBQUNnQixPQUFaLENBQW9CLFVBQUNOLFVBQUQsRUFBYUYsR0FBYixFQUFxQjtBQUFFWCxJQUFBQSxNQUFNLENBQUNjLEtBQVAsQ0FBYUgsR0FBYixJQUFvQixFQUFwQjtBQUF5QixHQUFwRTtBQUVBZixFQUFBQSxRQUFRLENBQUNxQixHQUFULENBQWFqQixNQUFiLEVBQXFCTSxPQUFyQjtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FtZWxUb0Rhc2gsIHN0cmluZ2lmeUVsZW1lbnQgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbmNvbnN0IHN0eWxlTWFwID0gbmV3IFdlYWtNYXAoKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVzb2x2ZVN0eWxlKGhvc3QsIHRhcmdldCwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoYFN0eWxlIHZhbHVlIG11c3QgYmUgYW4gb2JqZWN0IGluICR7c3RyaW5naWZ5RWxlbWVudCh0YXJnZXQpfTpgLCB2YWx1ZSk7XG4gIH1cblxuICBjb25zdCBwcmV2aW91c01hcCA9IHN0eWxlTWFwLmdldCh0YXJnZXQpIHx8IG5ldyBNYXAoKTtcblxuICBjb25zdCBuZXh0TWFwID0gT2JqZWN0LmtleXModmFsdWUpLnJlZHVjZSgobWFwLCBrZXkpID0+IHtcbiAgICBjb25zdCBkYXNoS2V5ID0gY2FtZWxUb0Rhc2goa2V5KTtcbiAgICBjb25zdCBzdHlsZVZhbHVlID0gdmFsdWVba2V5XTtcblxuICAgIGlmICghc3R5bGVWYWx1ZSAmJiBzdHlsZVZhbHVlICE9PSAwKSB7XG4gICAgICB0YXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoZGFzaEtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhcmdldC5zdHlsZS5zZXRQcm9wZXJ0eShkYXNoS2V5LCBzdHlsZVZhbHVlKTtcbiAgICB9XG5cbiAgICBtYXAuc2V0KGRhc2hLZXksIHN0eWxlVmFsdWUpO1xuICAgIHByZXZpb3VzTWFwLmRlbGV0ZShkYXNoS2V5KTtcblxuICAgIHJldHVybiBtYXA7XG4gIH0sIG5ldyBNYXAoKSk7XG5cbiAgcHJldmlvdXNNYXAuZm9yRWFjaCgoc3R5bGVWYWx1ZSwga2V5KSA9PiB7IHRhcmdldC5zdHlsZVtrZXldID0gJyc7IH0pO1xuXG4gIHN0eWxlTWFwLnNldCh0YXJnZXQsIG5leHRNYXApO1xufVxuIl19
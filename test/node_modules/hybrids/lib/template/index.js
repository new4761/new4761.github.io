"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.html = html;
exports.svg = svg;

var _define = _interopRequireDefault(require("../define"));

var _core = require("./core");

var helpers = _interopRequireWildcard(require("./helpers"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PLACEHOLDER = (0, _core.getPlaceholder)();
var SVG_PLACEHOLDER = (0, _core.getPlaceholder)('svg');
var templatesMap = new Map();
var stylesMap = new WeakMap();
var methods = {
  define: function define(elements) {
    (0, _define.default)(elements);
    return this;
  },
  key: function key(id) {
    this.id = id;
    return this;
  },
  style: function style() {
    for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
      styles[_key] = arguments[_key];
    }

    stylesMap.set(this, styles);
    return this;
  }
};

function create(parts, args, isSVG) {
  var createTemplate = function createTemplate(host) {
    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : host;
    var styles = stylesMap.get(createTemplate);
    var id = parts.join(PLACEHOLDER);
    if (styles) id += styles.join(PLACEHOLDER);
    if (isSVG) id += SVG_PLACEHOLDER;
    var render = templatesMap.get(id);

    if (!render) {
      render = (0, _core.compileTemplate)(parts, isSVG, styles);
      templatesMap.set(id, render);
    }

    render(host, target, args);
  };

  return Object.assign(createTemplate, methods);
}

function html(parts) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return create(parts, args);
}

function svg(parts) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return create(parts, args, true);
}

Object.assign(html, helpers);
Object.assign(svg, helpers);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wbGF0ZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJQTEFDRUhPTERFUiIsIlNWR19QTEFDRUhPTERFUiIsInRlbXBsYXRlc01hcCIsIk1hcCIsInN0eWxlc01hcCIsIldlYWtNYXAiLCJtZXRob2RzIiwiZGVmaW5lIiwiZWxlbWVudHMiLCJrZXkiLCJpZCIsInN0eWxlIiwic3R5bGVzIiwic2V0IiwiY3JlYXRlIiwicGFydHMiLCJhcmdzIiwiaXNTVkciLCJjcmVhdGVUZW1wbGF0ZSIsImhvc3QiLCJ0YXJnZXQiLCJnZXQiLCJqb2luIiwicmVuZGVyIiwiT2JqZWN0IiwiYXNzaWduIiwiaHRtbCIsInN2ZyIsImhlbHBlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFdBQVcsR0FBRywyQkFBcEI7QUFDQSxJQUFNQyxlQUFlLEdBQUcsMEJBQWUsS0FBZixDQUF4QjtBQUVBLElBQU1DLFlBQVksR0FBRyxJQUFJQyxHQUFKLEVBQXJCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLElBQUlDLE9BQUosRUFBbEI7QUFFQSxJQUFNQyxPQUFPLEdBQUc7QUFDZEMsRUFBQUEsTUFEYyxrQkFDUEMsUUFETyxFQUNHO0FBQ2YseUJBQWVBLFFBQWY7QUFDQSxXQUFPLElBQVA7QUFDRCxHQUphO0FBS2RDLEVBQUFBLEdBTGMsZUFLVkMsRUFMVSxFQUtOO0FBQ04sU0FBS0EsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsV0FBTyxJQUFQO0FBQ0QsR0FSYTtBQVNkQyxFQUFBQSxLQVRjLG1CQVNHO0FBQUEsc0NBQVJDLE1BQVE7QUFBUkEsTUFBQUEsTUFBUTtBQUFBOztBQUNmUixJQUFBQSxTQUFTLENBQUNTLEdBQVYsQ0FBYyxJQUFkLEVBQW9CRCxNQUFwQjtBQUNBLFdBQU8sSUFBUDtBQUNEO0FBWmEsQ0FBaEI7O0FBZUEsU0FBU0UsTUFBVCxDQUFnQkMsS0FBaEIsRUFBdUJDLElBQXZCLEVBQTZCQyxLQUE3QixFQUFvQztBQUNsQyxNQUFNQyxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLElBQUQsRUFBeUI7QUFBQSxRQUFsQkMsTUFBa0IsdUVBQVRELElBQVM7QUFDOUMsUUFBTVAsTUFBTSxHQUFHUixTQUFTLENBQUNpQixHQUFWLENBQWNILGNBQWQsQ0FBZjtBQUNBLFFBQUlSLEVBQUUsR0FBR0ssS0FBSyxDQUFDTyxJQUFOLENBQVd0QixXQUFYLENBQVQ7QUFDQSxRQUFJWSxNQUFKLEVBQVlGLEVBQUUsSUFBSUUsTUFBTSxDQUFDVSxJQUFQLENBQVl0QixXQUFaLENBQU47QUFDWixRQUFJaUIsS0FBSixFQUFXUCxFQUFFLElBQUlULGVBQU47QUFFWCxRQUFJc0IsTUFBTSxHQUFHckIsWUFBWSxDQUFDbUIsR0FBYixDQUFpQlgsRUFBakIsQ0FBYjs7QUFDQSxRQUFJLENBQUNhLE1BQUwsRUFBYTtBQUNYQSxNQUFBQSxNQUFNLEdBQUcsMkJBQWdCUixLQUFoQixFQUF1QkUsS0FBdkIsRUFBOEJMLE1BQTlCLENBQVQ7QUFDQVYsTUFBQUEsWUFBWSxDQUFDVyxHQUFiLENBQWlCSCxFQUFqQixFQUFxQmEsTUFBckI7QUFDRDs7QUFFREEsSUFBQUEsTUFBTSxDQUFDSixJQUFELEVBQU9DLE1BQVAsRUFBZUosSUFBZixDQUFOO0FBQ0QsR0FiRDs7QUFlQSxTQUFPUSxNQUFNLENBQUNDLE1BQVAsQ0FBY1AsY0FBZCxFQUE4QlosT0FBOUIsQ0FBUDtBQUNEOztBQUVNLFNBQVNvQixJQUFULENBQWNYLEtBQWQsRUFBOEI7QUFBQSxxQ0FBTkMsSUFBTTtBQUFOQSxJQUFBQSxJQUFNO0FBQUE7O0FBQ25DLFNBQU9GLE1BQU0sQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLENBQWI7QUFDRDs7QUFFTSxTQUFTVyxHQUFULENBQWFaLEtBQWIsRUFBNkI7QUFBQSxxQ0FBTkMsSUFBTTtBQUFOQSxJQUFBQSxJQUFNO0FBQUE7O0FBQ2xDLFNBQU9GLE1BQU0sQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWMsSUFBZCxDQUFiO0FBQ0Q7O0FBRURRLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxJQUFkLEVBQW9CRSxPQUFwQjtBQUNBSixNQUFNLENBQUNDLE1BQVAsQ0FBY0UsR0FBZCxFQUFtQkMsT0FBbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lRWxlbWVudHMgZnJvbSAnLi4vZGVmaW5lJztcblxuaW1wb3J0IHsgY29tcGlsZVRlbXBsYXRlLCBnZXRQbGFjZWhvbGRlciB9IGZyb20gJy4vY29yZSc7XG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJy4vaGVscGVycyc7XG5cbmNvbnN0IFBMQUNFSE9MREVSID0gZ2V0UGxhY2Vob2xkZXIoKTtcbmNvbnN0IFNWR19QTEFDRUhPTERFUiA9IGdldFBsYWNlaG9sZGVyKCdzdmcnKTtcblxuY29uc3QgdGVtcGxhdGVzTWFwID0gbmV3IE1hcCgpO1xuY29uc3Qgc3R5bGVzTWFwID0gbmV3IFdlYWtNYXAoKTtcblxuY29uc3QgbWV0aG9kcyA9IHtcbiAgZGVmaW5lKGVsZW1lbnRzKSB7XG4gICAgZGVmaW5lRWxlbWVudHMoZWxlbWVudHMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBrZXkoaWQpIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHN0eWxlKC4uLnN0eWxlcykge1xuICAgIHN0eWxlc01hcC5zZXQodGhpcywgc3R5bGVzKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZShwYXJ0cywgYXJncywgaXNTVkcpIHtcbiAgY29uc3QgY3JlYXRlVGVtcGxhdGUgPSAoaG9zdCwgdGFyZ2V0ID0gaG9zdCkgPT4ge1xuICAgIGNvbnN0IHN0eWxlcyA9IHN0eWxlc01hcC5nZXQoY3JlYXRlVGVtcGxhdGUpO1xuICAgIGxldCBpZCA9IHBhcnRzLmpvaW4oUExBQ0VIT0xERVIpO1xuICAgIGlmIChzdHlsZXMpIGlkICs9IHN0eWxlcy5qb2luKFBMQUNFSE9MREVSKTtcbiAgICBpZiAoaXNTVkcpIGlkICs9IFNWR19QTEFDRUhPTERFUjtcblxuICAgIGxldCByZW5kZXIgPSB0ZW1wbGF0ZXNNYXAuZ2V0KGlkKTtcbiAgICBpZiAoIXJlbmRlcikge1xuICAgICAgcmVuZGVyID0gY29tcGlsZVRlbXBsYXRlKHBhcnRzLCBpc1NWRywgc3R5bGVzKTtcbiAgICAgIHRlbXBsYXRlc01hcC5zZXQoaWQsIHJlbmRlcik7XG4gICAgfVxuXG4gICAgcmVuZGVyKGhvc3QsIHRhcmdldCwgYXJncyk7XG4gIH07XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY3JlYXRlVGVtcGxhdGUsIG1ldGhvZHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHRtbChwYXJ0cywgLi4uYXJncykge1xuICByZXR1cm4gY3JlYXRlKHBhcnRzLCBhcmdzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN2ZyhwYXJ0cywgLi4uYXJncykge1xuICByZXR1cm4gY3JlYXRlKHBhcnRzLCBhcmdzLCB0cnVlKTtcbn1cblxuT2JqZWN0LmFzc2lnbihodG1sLCBoZWxwZXJzKTtcbk9iamVjdC5hc3NpZ24oc3ZnLCBoZWxwZXJzKTtcbiJdfQ==
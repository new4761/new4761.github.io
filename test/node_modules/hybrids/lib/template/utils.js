"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTemplateEnd = getTemplateEnd;
exports.removeTemplate = removeTemplate;
exports.dataMap = void 0;
var map = new WeakMap();
var dataMap = {
  get: function get(key, defaultValue) {
    var value = map.get(key);
    if (value) return value;

    if (defaultValue) {
      map.set(key, defaultValue);
    }

    return defaultValue;
  },
  set: function set(key, value) {
    map.set(key, value);
    return value;
  }
};
exports.dataMap = dataMap;

function getTemplateEnd(node) {
  var data; // eslint-disable-next-line no-cond-assign

  while (node && (data = dataMap.get(node)) && data.endNode) {
    node = data.endNode;
  }

  return node;
}

function removeTemplate(target) {
  if (target.nodeType !== Node.TEXT_NODE) {
    var child = target.childNodes[0];

    while (child) {
      target.removeChild(child);
      child = target.childNodes[0];
    }
  } else {
    var data = dataMap.get(target);

    if (data.startNode) {
      var endNode = getTemplateEnd(data.endNode);
      var node = data.startNode;
      var lastNextSibling = endNode.nextSibling;

      while (node) {
        var nextSibling = node.nextSibling;
        node.parentNode.removeChild(node);
        node = nextSibling !== lastNextSibling && nextSibling;
      }
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wbGF0ZS91dGlscy5qcyJdLCJuYW1lcyI6WyJtYXAiLCJXZWFrTWFwIiwiZGF0YU1hcCIsImdldCIsImtleSIsImRlZmF1bHRWYWx1ZSIsInZhbHVlIiwic2V0IiwiZ2V0VGVtcGxhdGVFbmQiLCJub2RlIiwiZGF0YSIsImVuZE5vZGUiLCJyZW1vdmVUZW1wbGF0ZSIsInRhcmdldCIsIm5vZGVUeXBlIiwiTm9kZSIsIlRFWFRfTk9ERSIsImNoaWxkIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwic3RhcnROb2RlIiwibGFzdE5leHRTaWJsaW5nIiwibmV4dFNpYmxpbmciLCJwYXJlbnROb2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQU1BLEdBQUcsR0FBRyxJQUFJQyxPQUFKLEVBQVo7QUFDTyxJQUFNQyxPQUFPLEdBQUc7QUFDckJDLEVBQUFBLEdBRHFCLGVBQ2pCQyxHQURpQixFQUNaQyxZQURZLEVBQ0U7QUFDckIsUUFBTUMsS0FBSyxHQUFHTixHQUFHLENBQUNHLEdBQUosQ0FBUUMsR0FBUixDQUFkO0FBQ0EsUUFBSUUsS0FBSixFQUFXLE9BQU9BLEtBQVA7O0FBRVgsUUFBSUQsWUFBSixFQUFrQjtBQUNoQkwsTUFBQUEsR0FBRyxDQUFDTyxHQUFKLENBQVFILEdBQVIsRUFBYUMsWUFBYjtBQUNEOztBQUVELFdBQU9BLFlBQVA7QUFDRCxHQVZvQjtBQVdyQkUsRUFBQUEsR0FYcUIsZUFXakJILEdBWGlCLEVBV1pFLEtBWFksRUFXTDtBQUNkTixJQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUUgsR0FBUixFQUFhRSxLQUFiO0FBQ0EsV0FBT0EsS0FBUDtBQUNEO0FBZG9CLENBQWhCOzs7QUFpQkEsU0FBU0UsY0FBVCxDQUF3QkMsSUFBeEIsRUFBOEI7QUFDbkMsTUFBSUMsSUFBSixDQURtQyxDQUVuQzs7QUFDQSxTQUFPRCxJQUFJLEtBQUtDLElBQUksR0FBR1IsT0FBTyxDQUFDQyxHQUFSLENBQVlNLElBQVosQ0FBWixDQUFKLElBQXNDQyxJQUFJLENBQUNDLE9BQWxELEVBQTJEO0FBQ3pERixJQUFBQSxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsT0FBWjtBQUNEOztBQUVELFNBQU9GLElBQVA7QUFDRDs7QUFFTSxTQUFTRyxjQUFULENBQXdCQyxNQUF4QixFQUFnQztBQUNyQyxNQUFJQSxNQUFNLENBQUNDLFFBQVAsS0FBb0JDLElBQUksQ0FBQ0MsU0FBN0IsRUFBd0M7QUFDdEMsUUFBSUMsS0FBSyxHQUFHSixNQUFNLENBQUNLLFVBQVAsQ0FBa0IsQ0FBbEIsQ0FBWjs7QUFDQSxXQUFPRCxLQUFQLEVBQWM7QUFDWkosTUFBQUEsTUFBTSxDQUFDTSxXQUFQLENBQW1CRixLQUFuQjtBQUNBQSxNQUFBQSxLQUFLLEdBQUdKLE1BQU0sQ0FBQ0ssVUFBUCxDQUFrQixDQUFsQixDQUFSO0FBQ0Q7QUFDRixHQU5ELE1BTU87QUFDTCxRQUFNUixJQUFJLEdBQUdSLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVSxNQUFaLENBQWI7O0FBRUEsUUFBSUgsSUFBSSxDQUFDVSxTQUFULEVBQW9CO0FBQ2xCLFVBQU1ULE9BQU8sR0FBR0gsY0FBYyxDQUFDRSxJQUFJLENBQUNDLE9BQU4sQ0FBOUI7QUFFQSxVQUFJRixJQUFJLEdBQUdDLElBQUksQ0FBQ1UsU0FBaEI7QUFDQSxVQUFNQyxlQUFlLEdBQUdWLE9BQU8sQ0FBQ1csV0FBaEM7O0FBRUEsYUFBT2IsSUFBUCxFQUFhO0FBQ1gsWUFBTWEsV0FBVyxHQUFHYixJQUFJLENBQUNhLFdBQXpCO0FBQ0FiLFFBQUFBLElBQUksQ0FBQ2MsVUFBTCxDQUFnQkosV0FBaEIsQ0FBNEJWLElBQTVCO0FBQ0FBLFFBQUFBLElBQUksR0FBR2EsV0FBVyxLQUFLRCxlQUFoQixJQUFtQ0MsV0FBMUM7QUFDRDtBQUNGO0FBQ0Y7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1hcCA9IG5ldyBXZWFrTWFwKCk7XG5leHBvcnQgY29uc3QgZGF0YU1hcCA9IHtcbiAgZ2V0KGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgY29uc3QgdmFsdWUgPSBtYXAuZ2V0KGtleSk7XG4gICAgaWYgKHZhbHVlKSByZXR1cm4gdmFsdWU7XG5cbiAgICBpZiAoZGVmYXVsdFZhbHVlKSB7XG4gICAgICBtYXAuc2V0KGtleSwgZGVmYXVsdFZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9LFxuICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIG1hcC5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9LFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRlbXBsYXRlRW5kKG5vZGUpIHtcbiAgbGV0IGRhdGE7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25kLWFzc2lnblxuICB3aGlsZSAobm9kZSAmJiAoZGF0YSA9IGRhdGFNYXAuZ2V0KG5vZGUpKSAmJiBkYXRhLmVuZE5vZGUpIHtcbiAgICBub2RlID0gZGF0YS5lbmROb2RlO1xuICB9XG5cbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVUZW1wbGF0ZSh0YXJnZXQpIHtcbiAgaWYgKHRhcmdldC5ub2RlVHlwZSAhPT0gTm9kZS5URVhUX05PREUpIHtcbiAgICBsZXQgY2hpbGQgPSB0YXJnZXQuY2hpbGROb2Rlc1swXTtcbiAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgIHRhcmdldC5yZW1vdmVDaGlsZChjaGlsZCk7XG4gICAgICBjaGlsZCA9IHRhcmdldC5jaGlsZE5vZGVzWzBdO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjb25zdCBkYXRhID0gZGF0YU1hcC5nZXQodGFyZ2V0KTtcblxuICAgIGlmIChkYXRhLnN0YXJ0Tm9kZSkge1xuICAgICAgY29uc3QgZW5kTm9kZSA9IGdldFRlbXBsYXRlRW5kKGRhdGEuZW5kTm9kZSk7XG5cbiAgICAgIGxldCBub2RlID0gZGF0YS5zdGFydE5vZGU7XG4gICAgICBjb25zdCBsYXN0TmV4dFNpYmxpbmcgPSBlbmROb2RlLm5leHRTaWJsaW5nO1xuXG4gICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICBjb25zdCBuZXh0U2libGluZyA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgbm9kZSA9IG5leHRTaWJsaW5nICE9PSBsYXN0TmV4dFNpYmxpbmcgJiYgbmV4dFNpYmxpbmc7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=